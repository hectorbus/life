#!/usr/bin/env ruby

# Conway's Game of Life

# The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.
# It is a zero-player game, meaning that its evolution is determined by its initial state, requiring no further input.
# One interacts with the Game of Life by creating an initial configuration and observing how it evolves.
# It is Turing complete and can simulate a universal constructor or any other Turing machine.

# https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life

$:.unshift(File.expand_path(File.join("..", "lib"), __dir__))

require "life"
require 'thor'

class GameOfLife < Thor

  def initialize(*args)
    super
  end

  option :width,  aliases: '--x', type: :numeric, default: 30, desc: 'Grid width size'
  option :height, aliases: '--y', type: :numeric, default: 30, desc: 'Grid height size'
  option :speed,  aliases: '--s', type: :numeric, default: 100, desc: 'Life cycle speed in milliseconds'
  desc "start", "Starts Conway's game of life."
  def start
    Life.new(options).start
  end

end

GameOfLife.start(ARGV)
